[{"/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/index.js":"1","/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/reportWebVitals.js":"2","/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/App.js":"3","/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/components/PopularRoutes.js":"4","/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/services/RoutesService.js":"5","/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/components/SearchResults.js":"6"},{"size":550,"mtime":1611781736328,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611608946882,"results":"9","hashOfConfig":"8"},{"size":881,"mtime":1611781717693,"results":"10","hashOfConfig":"8"},{"size":8952,"mtime":1611864550481,"results":"11","hashOfConfig":"8"},{"size":472,"mtime":1611849247957,"results":"12","hashOfConfig":"8"},{"size":2101,"mtime":1611782707862,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1s46lgu",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/index.js",["29"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom' \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["30","31"],"/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/reportWebVitals.js",[],"/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/App.js",[],"/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/components/PopularRoutes.js",["32","33","34","35","36","37","38","39","40","41","42","43","44","45"],"import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\nimport axios from 'axios'\nimport MUNDO_SERVICE from '../services/RoutesService'\nimport '../App.css'\n\nexport default class PopularRoutes extends Component {\n\n\n    state = {\n        popularRoutes: [],\n        searchResults: [],\n        displayFlightModal: false,\n        destination: '',\n        origin: '',\n        tripType: '',\n        departureDate: '',\n        returnDate: '',\n        passengerCount: 0,\n        promoCode: '',\n        modalIndex: null\n    }\n\n    componentDidMount() {\n        this.getPopularRoutes();\n    }\n\n   \n    getPopularRoutes = () => {\n        MUNDO_SERVICE\n            .popularRoutes()\n            .then(responseFromAPI => {\n                \n                this.setState({\n                    popularRoutes: responseFromAPI.data\n                }) \n                 this.props.onFlightsChange(responseFromAPI.data)\n            })\n            .catch(err => console.log(err))\n    }\n\n    \n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        const popularRoutesCopy = [...this.state.popularRoutes];\n        popularRoutesCopy[this.state.modalIndex][name] = value;\n        this.setState({ popularRoutes: popularRoutesCopy });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const { destination, origin, tripType, departureDate, returnDate, passengerCount, promoCode } = this.state;\n        let passengerParseInt = parseInt(passengerCount)\n        let flightInfo = JSON.stringify({ destination, origin, tripType, departureDate, returnDate, promoCode, passengerCount: passengerParseInt })\n       \n        MUNDO_SERVICE\n            .searchFlights(flightInfo)\n            .then(responseFromAPI => {\n                this.setState({ searchResults: responseFromAPI.data })\n                this.props.onFlightsChange(responseFromAPI.data)\n                this.props.history.push('/results')\n            })\n            .catch(err => console.log(err))\n    }\n\n    toggleModal = (event) => {\n        const { flights } = this.props;\n        console.log(event.target.id)\n        const { displayFlightModal, modalIndex, destination, origin, tripType, departureDate, returnDate, popularRoutes } = this.state;\n        this.setState({\n            displayFlightModal: !displayFlightModal,\n            destination: '',\n            origin: '',\n            tripType: '',\n            departureDate: '',\n            returnDate: '',\n            passengerCount: 0,\n            promoCode: '',\n            modalIndex: 0\n        })\n    }\n\n    prefillModal = (event) => {\n        const { displayFlightModal, popularRoutes, modalIndex } = this.state;\n        const { id } = event.target\n        this.setState({\n            displayFlightModal: !displayFlightModal,\n            modalIndex: id,\n            destination: popularRoutes[modalIndex]?.destination,\n            origin: popularRoutes[modalIndex]?.origin,\n            tripType: popularRoutes[modalIndex]?.tripType,\n            departureDate: popularRoutes[modalIndex]?.departureDate,\n            returnDate: popularRoutes[modalIndex]?.returnDate\n        })\n    }\n\n\n\n\n    render() {\n        \n        const { popularRoutes, displayFlightModal, modalIndex, departureDate, returnDate, tripType, origin, destination, passengerCount } = this.state;\n\n        console.log(popularRoutes[modalIndex])\n        \n        return (\n            <div className='container'>\n                <div className='row'>\n                <ul data-testid='popular-routes'>\n                    {this.state.popularRoutes.map((route, i) => {\n                        return(\n                            <>\n                            <div id={i}>\n                                <li className='card'>\n                                <div>\n                                    <img className='destination-image' src={route.routeCoverImage} alt='destination' />\n                                </div>\n                                <div className='card-body'>\n                                <div className='to-left'>\n                                    <div className='route-card-top'>\n                                        <p>{route.origin}-{route.destination}</p>\n                                        <p>{route.departureDate} {route.returnDate && route.tripType === 'roundTrip' && <> - {route.returnDate}</>}</p>\n                                    </div>\n                                </div>\n                                <div className='to-right'>\n                                    <div className='fares-from'>\n                                    Fares From\n                                    </div>\n                                    <div className='fare-price'>\n                                        <span>$</span><span>{route.priceUSD}</span>\n                                    </div>\n                                    <p>{route.tripType}</p>\n                                </div>\n                                </div>\n                                <div className='card-body'>\n                                <Button color='danger' onClick={this.prefillModal} id={i}>VIEW DEAL</Button>\n                                </div>\n                                </li>\n                            </div>\n                    </>\n                        )\n                    })}\n                    <Modal centered isOpen={this.state.displayFlightModal} >\n                        <ModalHeader toggle={this.toggleModal}>Search Flights</ModalHeader>\n                        <ModalBody>\n                            <div className='modal-form'>\n                                <form onSubmit={this.handleSubmit} className='flight-form'>\n                                    <div>\n                                    <label>\n                                        Round-trip\n                                        <input type='radio' name='tripType' required value='roundTrip' checked={popularRoutes[modalIndex]?.tripType === 'roundTrip'} onChange={this.handleInputChange} />\n                                    </label>\n                                    <label>\n                                        One Way\n                                        <input type='radio' name='tripType' required value='oneWay' checked={popularRoutes[modalIndex]?.tripType === 'oneWay'} onChange={this.handleInputChange} />\n                                    </label>\n                                    <label>From*\n                                        <input type='text' name='origin' id='from' required value={popularRoutes[modalIndex]?.origin} onChange={this.handleInputChange} />\n                                    </label>\n                                    <label>To*   \n                                        <input type='text' name='destination' id='to' required value={popularRoutes[modalIndex]?.destination} onChange={this.handleInputChange} />\n                                    </label>\n                                    <label>\n                                        Depart*\n                                        <input type='date' name='departureDate' id='depart' required value={popularRoutes[modalIndex]?.departureDate} onChange={this.handleInputChange} />\n                                    </label>     \n                                    <label>\n                                        Return*\n                                        <input type='date' name='returnDate' id='return' value={returnDate} onChange={this.handleInputChange} />\n                                    </label>\n                                        <label>Passengers\n                                        <input type='number' min='1' name='passengerCount' value={passengerCount} id='passengers' pattern=\"^-?[0-9]\\d*\\.?\\d*$\" required onInput={this.handleInputChange} />\n                                        </label>\n                                    <label>\n                                        Promo Code\n                                        <input type='text' name='promoCode' id='promoCode' value='' onChange={this.handleInputChange} />\n                                    </label>\n                                        \n                                    </div>\n                                    <div className='form-group form-button'>\n                                        <input type='submit' name='search' id='search' className='form-submit-btn' value='Search Flights' />\n                                    </div>\n                                </form>\n                                {/* {message && <div style={{ color: \"red\", paddingTop: \"1rem\" }}> {message} </div>} */}\n                            </div>\n                        </ModalBody>\n                    </Modal>\n                    \n                </ul>\n                \n                    \n                </div>\n            </div>\n        )\n    }\n}\n\n","/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/services/RoutesService.js",[],"/Users/mikaylacastro/code/hiring-exercises/everymundo-test/src/components/SearchResults.js",[],{"ruleId":"46","severity":1,"message":"47","line":6,"column":10,"nodeType":"48","messageId":"49","endLine":6,"endColumn":23},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":13},{"ruleId":"46","severity":1,"message":"55","line":68,"column":17,"nodeType":"48","messageId":"49","endLine":68,"endColumn":24},{"ruleId":"46","severity":1,"message":"56","line":70,"column":37,"nodeType":"48","messageId":"49","endLine":70,"endColumn":47},{"ruleId":"46","severity":1,"message":"57","line":70,"column":49,"nodeType":"48","messageId":"49","endLine":70,"endColumn":60},{"ruleId":"46","severity":1,"message":"58","line":70,"column":62,"nodeType":"48","messageId":"49","endLine":70,"endColumn":68},{"ruleId":"46","severity":1,"message":"59","line":70,"column":70,"nodeType":"48","messageId":"49","endLine":70,"endColumn":78},{"ruleId":"46","severity":1,"message":"60","line":70,"column":80,"nodeType":"48","messageId":"49","endLine":70,"endColumn":93},{"ruleId":"46","severity":1,"message":"61","line":70,"column":95,"nodeType":"48","messageId":"49","endLine":70,"endColumn":105},{"ruleId":"46","severity":1,"message":"62","line":70,"column":107,"nodeType":"48","messageId":"49","endLine":70,"endColumn":120},{"ruleId":"46","severity":1,"message":"63","line":103,"column":32,"nodeType":"48","messageId":"49","endLine":103,"endColumn":50},{"ruleId":"46","severity":1,"message":"60","line":103,"column":64,"nodeType":"48","messageId":"49","endLine":103,"endColumn":77},{"ruleId":"46","severity":1,"message":"59","line":103,"column":91,"nodeType":"48","messageId":"49","endLine":103,"endColumn":99},{"ruleId":"46","severity":1,"message":"58","line":103,"column":101,"nodeType":"48","messageId":"49","endLine":103,"endColumn":107},{"ruleId":"46","severity":1,"message":"57","line":103,"column":109,"nodeType":"48","messageId":"49","endLine":103,"endColumn":120},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'axios' is defined but never used.","'flights' is assigned a value but never used.","'modalIndex' is assigned a value but never used.","'destination' is assigned a value but never used.","'origin' is assigned a value but never used.","'tripType' is assigned a value but never used.","'departureDate' is assigned a value but never used.","'returnDate' is assigned a value but never used.","'popularRoutes' is assigned a value but never used.","'displayFlightModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]